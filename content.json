{"meta":{"title":"杨鹏的博客","subtitle":null,"description":null,"author":"yp","url":"http://yoursite.com","root":"/"},"pages":[{"title":"不积溪流，无以成江海","date":"2019-05-23T02:03:18.000Z","updated":"2019-05-23T09:58:52.765Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"海纳百川，有容乃大","date":"2019-05-23T02:00:26.000Z","updated":"2019-05-23T09:59:51.216Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"java注解","slug":"java注解","date":"2019-06-04T14:43:27.000Z","updated":"2019-06-04T14:57:43.639Z","comments":true,"path":"2019/06/04/java注解/","link":"","permalink":"http://yoursite.com/2019/06/04/java注解/","excerpt":"","text":"注解注解使用12345@value(value=\"2\",test=true)@demo(\"demo1\") //注解的值可以是任何类型@demo(\"demo2\")//默认给value赋值@array（&#123;@element1(1),@element2(2)&#125;）private String user; 使用场合实例化，类型转化，实现接口，异常123456new @Interned UsermyString = (@NonNull String) str;class UnmodifiableList&lt;T&gt; implements @Readonly List&lt;@Readonly T&gt; &#123; ... &#125;void monitorTemperature() throws @Critical TemperatureException &#123; ... &#125; 定义注解123456@Repeatable(Schedules.class) //注解containerpublic @interface Schedule &#123; String dayOfMonth() default \"first\"; String dayOfWeek() default \"Mon\"; int hour() default 12;&#125; 获取注解反射相关12AnnotatedElement.getAnnotation(Class&lt;T&gt;)//单个注解AnnotatedElement.getAnnotationsByType(Class&lt;T&gt;)//注解容器 注解设计使用次数 @repeatable使用目标 @target灵活，有用","categories":[],"tags":[{"name":"java基础","slug":"java基础","permalink":"http://yoursite.com/tags/java基础/"}]},{"title":"The Java Technology Phenomenon","slug":"The-Java-Technology-Phenomenon","date":"2019-05-24T08:26:14.000Z","updated":"2019-05-24T08:39:12.923Z","comments":true,"path":"2019/05/24/The-Java-Technology-Phenomenon/","link":"","permalink":"http://yoursite.com/2019/05/24/The-Java-Technology-Phenomenon/","excerpt":"","text":"The Java Technology Phenomenonprovide an overview of what this technology can do for you About the java technologyprogramming language and platform the java programming language characters simple architecture neutral object oriented protable distrusted high performance mutithread robust dynamic secure running protablethe VM can perform additional steps at runtime to give your application a performance boost,such as recompile frequently used section of code and find performance bottlenecks the java platformthe java platform has two components the java virtual machine the java application programming interface (API) what can java technology do development tools application programming interface integration libraries how will java technology change my life get start quickly write less code write better code develop programs more quickly avoid platform dependence write once,run anywhere distribute software more easily","categories":[],"tags":[]},{"title":"Idea-SpringBootProject","slug":"Idea-SpringBootProject","date":"2019-05-23T14:38:35.000Z","updated":"2019-05-23T14:38:35.746Z","comments":true,"path":"2019/05/23/Idea-SpringBootProject/","link":"","permalink":"http://yoursite.com/2019/05/23/Idea-SpringBootProject/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Spring注解","slug":"Spring注解","date":"2019-05-23T01:33:56.000Z","updated":"2019-05-23T09:50:32.179Z","comments":true,"path":"2019/05/23/Spring注解/","link":"","permalink":"http://yoursite.com/2019/05/23/Spring注解/","excerpt":"","text":"spring注解驱动开发1 依赖注入1.1 组件注册@configuration@bean 方法名为类小写，容器初始化时创建@componentScan @include @exclude@typefilter 自定义过滤规则，根据类过滤，根据注解过滤@scope Singleton，prototype session request@lazy 调用时才创建bean@conditional 按照条件注册bean@import@importSelectorimportBeanDefinitionRegistrarFactoryBean接口 &amp;前缀获取factorybean 1.2 Bean生命周期@bean（initMethod=“init”） init方法在类中@bean（destroyMethod=“destroy”）beanpostprocessor 后置处理器 接口有两个方法，初始化方法之前和初始化方法之后 创建对象 构造方法加逻辑 populateBean初始化前 applyBeanPostprocessorBeforeInitMethod初始化 invokeInitMethod初始化后 applyBeanPostProcessorAfterInitMethod销毁 1.3 属性赋值@value ${“name”}@propertySource 属性文件就是spring容器的环境变量 1.4 自动注入@autowired 根据变量名注入@qualifier 指定bean名称注入@primary 首选注入@profile","categories":[],"tags":[{"name":"Spring","slug":"Spring","permalink":"http://yoursite.com/tags/Spring/"}]}]}